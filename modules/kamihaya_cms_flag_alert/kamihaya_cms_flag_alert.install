<?php

use Drupal\editor\Entity\Editor;
use Drupal\filter\Entity\FilterFormat;

/**
 * Implements hook_install().
 */
function kamihaya_cms_flag_alert_install() {
  // Load the basic HTML filter format.
  $basic = FilterFormat::load('basic_html');
  if ($basic) {
    $filters = $basic->get('filters');

    // Get the tags from the allowed HTML.
    preg_match_all('/<([^>]+)>/', $filters['filter_html']['settings']['allowed_html'], $matches);

    $result = [];
    foreach ($matches[1] as $tag) {
      $parts = preg_split('/\s+/', trim($tag));
      $tag_name = array_shift($parts);
      $attrs = $parts;

      if (isset($result[$tag_name])) {
          $result[$tag_name] = array_unique(array_merge($result[$tag_name], $attrs));
      } else {
          $result[$tag_name] = $attrs;
      }
    }

    if (!array_key_exists('span', $result)) {
      // If 'span' tag is not present, initialize it with an empty array.
      $result['span'] = [];
    }

    $filters['filter_html']['settings']['allowed_html'] = '';
    foreach ($result as $tag_name => $attrs) {
      // Add the class attribute to each tag.
      if (!in_array($tag_name, ['a', 'span', 'p']) || in_array('class', $attrs)) {
        // If the tag is not 'a', 'span', or 'p' and already has 'class', skip it.
        $filters['filter_html']['settings']['allowed_html'] .= ' <' . $tag_name . (!empty($attrs) ? ' ' . implode(' ', $attrs) : '') . '>';
        continue;
      }
      // If the tag is 'a', 'span', or 'p', ensure it has the 'class' attribute.
      $attrs[] = 'class';

      // Reconstruct the tag with its attributes.
      $filters['filter_html']['settings']['allowed_html'] .= ' <' . $tag_name . (!empty($attrs) ? ' ' . implode(' ', $attrs) : '') . '>';
    }

    $basic->set('filters', $filters);
    // Save the changes to the basic HTML format.
    $basic->save();
  }

  // Load the basic HTML editor.
  $editor = Editor::load('basic_html');
  if ($editor) {
    $settings = $editor->get('settings');

    $allouwed_tags = &$settings['plugins']['ckeditor5_sourceEditing']['allowed_tags'] ?? [];
    $change_tags = ['p', 'span', 'a'];
    foreach ($allouwed_tags as $tag) {
      if (strpos($tag, '<p') === FALSE && strpos($tag, '<a') === FALSE && strpos($tag, '<span') === FALSE) {
        // Skip tags that are not 'p', 'a', or 'span'.
        continue;
      }

      foreach ($change_tags as $idx => $change_tag) {
        if (strpos($tag, '<' . $change_tag) === 0) {
          unset($change_tags[$idx]);
        }
      }
    }

    if (!empty($change_tags)) {
      // Add missing tags to the allowed tags.
      foreach ($change_tags as $tag) {
        $allouwed_tags[] = $tag === 'a'? "<{$tag} href title hreflang>" : "<{$tag}>";
      }
    }

    foreach ($allouwed_tags as $idx => $tag) {
      if (strpos($tag, '<p') === FALSE && strpos($tag, '<a') === FALSE && strpos($tag, '<span') === FALSE) {
        // Skip tags that are not 'p', 'a', or 'span'.
        continue;
      }
      if (strpos($tag, 'class') !== FALSE) {
        // If the tag already has 'class', skip it.
        continue;
      }
      // Add class attribute.
      $tag = str_replace('>', ' class>', $tag);
      $allouwed_tags[$idx] = $tag;
    }
    // Set the updated settings back to the editor.
    $editor->set('settings', $settings);
    // Save the changes to the basic HTML editor.
    $editor->save();
  }
}
