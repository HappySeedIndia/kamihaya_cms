<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\Role;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function kamihaya_cms_spiral_api_form_user_login_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
  if (@in_array('::validateAuthentication', $form['#validate'])) {
    $key = array_search('::validateAuthentication', $form['#validate']);
    $form['#validate'][$key] = 'kamihaya_cms_spiral_api_authenticate_validate';
  }
}

/**
 * Validate for the user authentication.
 *
 * @param $form
 *   Nested array of form elements that comprise the form.
 * @param $form_state
 *   The current state of the form.
 */
function kamihaya_cms_spiral_api_authenticate_validate(array &$form, FormStateInterface $form_state) {
  $original_form = $form_state->getFormObject();
  $original_form->validateAuthentication($form, $form_state);

  if (!empty($form_state->get('uid'))) {
    if ($form_state->get('uid') == 1) {
      return;
    }
    /** @var \Drupal\Core\Session\AccountInterface $account */
    $account = \Drupal::entityTypeManager()->getStorage('user')->load($form_state->get('uid'));
    $roles = Role::loadMultiple($account->getRoles());

    foreach ($roles as $role) {
      if ($role->isAdmin()) {
        return;
      }
      elseif ($role->id() != 'authenticated' && $role->id() != 'anonymous') {
        return;
      }
    }
  }

  $name = $form_state->getValue('name');
  $pass = $form_state->getValue('pass');

  if (!\Drupal::service('email.validator')->isValid($name)) {
    $form_state->setErrorByName('name', t('The email address %mail is not valid.', ['%mail' => $name]));
    return;
  }

  $spiral = \Drupal::service('spiral.login');
  if ($user = $spiral->loginValidate($name, $pass)) {
    $auth = \Drupal::service('externalauth.externalauth');
    $account = $auth->loginRegister($user["sso_uid"], 'kamihaya_cms_spiral_api');
//     $account->set('field_member_status', $user["status"]);
//     $account->save();
    $form_state->set('uid', $account->id());
  }
  else {
    $messages = \Drupal::messenger()->all();
    if (!empty($messages['error'][0])) {
      $form_state->setErrorByName('name', $messages['error'][0]);
    }
  }
}
