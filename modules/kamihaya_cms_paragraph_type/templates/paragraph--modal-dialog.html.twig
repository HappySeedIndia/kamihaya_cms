{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('kamihaya_cms_paragraph_type/modal-dialog') }}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  {% block content %}
    {% if content.field_dialog_title|render and content.field_dialog_body|render %}
      {% if content.field_open_button_label|render %}
        {% set open_button_label = content.field_open_button_label|render|striptags|trim %}
        <p>
          <button class="btn btn-primary" type="button" data-bs-toggle="modal" data-bs-target="#kamihayaModal">
            {{ content.field_open_button_label.0 }}
          </button>&nbsp;
        </p>
      {% endif %}
      {% set width = paragraph.field_modal_width.0.value %}
      {% set width_unit = paragraph.field_width_unit.0.value %}
      {%
        set style = [
          width ? (width_unit == 'px' ? ('width: 100%; max-width: ' ~ width ~ width_unit ~ ';') : ('width: ' ~ width ~ (width_unit ? width_unit ~ ';' : 'px;'))) : 'width: 100%;',
          height ? 'height: ' ~ height ~ (height_unit ? height_unit ~ ';' : 'px;') : 'height: auto;',
        ]
      %}
      {% if width_unit == 'vw' %}
        {%
          set style = style|merge([
            'margin-left: calc(-50vw + 50%);',
            'max-width: none;',
          ])
        %}
      {% endif %}

      {% set close_button_label = content.field_close_button_label.0 %}
      <div{{attributes.addClass(classes)}}>
        <div class="modal fade" id="kamihayaModal" tabindex="-1" aria-labelledby="kamihayaModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered"{% if style %} style="{{ style|join(' ') }}"{% endif %}>
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="kamihayaModalLabel">
                  {{ content.field_dialog_title }}
                </h5>
                {% if close_button_label is empty %}
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                {% endif %}
              </div>
              <div class="modal-body">
                {{ content.field_dialog_body }}
              </div>
              <div class="modal-footer">
                {% if content.field_button_label|render %}
                  {% set button_label = content.field_button_label.0 %}
                  <button class="btn btn-primary" type="button">{{ content.field_button_label.0  }}</button>
                {% endif %}
                {% if content.field_close_button_label|render %}
                  <button class="btn btn-tertiary" type="button" data-bs-dismiss="modal">{{ content.field_close_button_label.0 }}</button>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  {% endblock %}
{% endblock paragraph %}
