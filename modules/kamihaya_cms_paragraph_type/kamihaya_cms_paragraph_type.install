<?php

use Drupal\Component\Serialization\Yaml;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;


/**
 * Update configs.
 */
function kamihaya_cms_paragraph_type_update_10001() {
  \Drupal::service('module_installer')->install(['entity_browser']);
  _kamihaya_cms_common_change_configs('kamihaya_cms_paragraph_type', [
    'paragraphs.paragraphs_type.headings.yml',
    'field.storage.paragraph.field_color.yml',
    'field.storage.paragraph.field_style.yml',
    'field.storage.paragraph.field_title_tag.yml',
    'field.storage.paragraph.field_title_text.yml',
    'field.field.paragraph.headings.field_color.yml',
    'field.field.paragraph.headings.field_style.yml',
    'field.field.paragraph.headings.field_title_tag.yml',
    'field.field.paragraph.headings.field_title_text.yml',
    'core.entity_form_display.paragraph.headings.default.yml',
    'core.entity_view_display.paragraph.headings.default.yml',
    'paragraphs.paragraphs_type.slider_item.yml',
    'paragraphs.paragraphs_type.slider.yml',
    'field.storage.paragraph.field_link.yml',
    'field.storage.paragraph.field_text.yml',
    'field.storage.paragraph.field_title.yml',
    'field.storage.paragraph.field_slider_image.yml',
    'field.storage.paragraph.field_slider_items.yml',
    'field.field.paragraph.slider_item.field_link.yml',
    'field.field.paragraph.slider_item.field_slider_image.yml',
    'field.field.paragraph.slider_item.field_text.yml',
    'field.field.paragraph.slider_item.field_title.yml',
    'field.field.paragraph.slider.field_slider_items.yml',
    'core.entity_form_display.paragraph.slider_item.default.yml',
    'core.entity_view_display.paragraph.slider_item.default.yml',
    'core.entity_form_display.paragraph.slider.default.yml',
    'core.entity_view_display.paragraph.slider.default.yml',
    'paragraphs.paragraphs_type.embed_tag.yml',
    'field.storage.paragraph.field_embed_tag.yml',
    'field.field.paragraph.embed_tag.field_embed_tag.yml',
    'core.entity_form_display.paragraph.embed_tag.default.yml',
    'core.entity_view_display.paragraph.embed_tag.default.yml',
    'paragraphs.paragraphs_type.file_download.yml',
    'field.storage.paragraph.field_file.yml',
    'field.field.paragraph.file_download.field_file.yml',
    'core.entity_form_display.paragraph.file_download.default.yml',
    'core.entity_view_display.paragraph.file_download.default.yml',
    'paragraphs.paragraphs_type.video.yml',
    'field.storage.paragraph.field_video_media.yml',
    'field.storage.paragraph.field_video_tag.yml',
    'field.field.paragraph.video.field_video_media.yml',
    'field.field.paragraph.video.field_video_tag.yml',
    'core.entity_form_display.paragraph.video.default.yml',
    'core.entity_view_display.paragraph.video.default.yml',
    'core.entity_form_display.paragraph.divider.default.yml',
    'core.entity_form_display.paragraph.link_button.default.yml',
  ], 'install');

  _kamihaya_cms_common_change_configs('kamihaya_cms_paragraph_type', [
    'views.view.contents_list.yml',
    'entity_browser.browser.contents_list.yml',
    'paragraphs.paragraphs_type.featured_content.yml',
    'field.storage.paragraph.field_content.yml',
    'field.field.paragraph.featured_content.field_content.yml',
    'core.entity_form_display.paragraph.featured_content.default.yml',
    'core.entity_view_display.paragraph.featured_content.default.yml',
    'paragraphs.paragraphs_type.two_col_table_row.yml',
    'field.storage.paragraph.field_row_data.yml',
    'field.storage.paragraph.field_row_label.yml',
    'field.field.paragraph.two_col_table_row.field_row_data.yml',
    'field.field.paragraph.two_col_table_row.field_row_label.yml',
    'core.entity_form_display.paragraph.two_col_table_row.default.yml',
    'core.entity_view_display.paragraph.two_col_table_row.default.yml',
    'paragraphs.paragraphs_type.two_col_table.yml',
    'field.storage.paragraph.field_table_rows.yml',
    'field.field.paragraph.two_col_table.field_table_rows.yml',
    'core.entity_form_display.paragraph.two_col_table.default.yml',
    'core.entity_view_display.paragraph.two_col_table.default.yml',
  ], 'optional');

  _kamihaya_cms_common_save_translation_configs([
    'paragraphs.paragraphs_type.headings.yml',
    'field.field.paragraph.headings.field_color.yml',
    'field.field.paragraph.headings.field_style.yml',
    'field.field.paragraph.headings.field_title_tag.yml',
    'field.field.paragraph.headings.field_title_text.yml',
    'paragraphs.paragraphs_type.slider_item.yml',
    'paragraphs.paragraphs_type.slider.yml',
    'field.field.paragraph.slider_item.field_link.yml',
    'field.field.paragraph.slider_item.field_slider_image.yml',
    'field.field.paragraph.slider_item.field_text.yml',
    'field.field.paragraph.slider_item.field_title.yml',
    'field.field.paragraph.slider.field_slider_items.yml',
    'paragraphs.paragraphs_type.embed_tag.yml',
    'field.field.paragraph.headings.feild_embed_tag.yml',
    'views.view.contents_list.yml',
    'entity_browser.browser.contents_list.yml',
    'paragraphs.paragraphs_type.featured_content.yml',
    'field.field.paragraph.featured_content.field_content.yml',
    'paragraphs.paragraphs_type.file_download.yml',
    'field.field.paragraph.file_download.field_file.yml',
    'paragraphs.paragraphs_type.two_col_table_row.yml',
    'field.field.paragraph.two_col_table_row.field_row_data.yml',
    'field.field.paragraph.two_col_table_row.field_row_label.yml',
    'paragraphs.paragraphs_type.two_col_table.yml',
    'field.field.paragraph.two_col_table.field_table_rows.yml',
    'paragraphs.paragraphs_type.video.yml',
    'field.field.paragraph.video.feild_video_media.yml',
    'field.field.paragraph.video.feild_video_tag.yml',
  ], 'ja');

}

/**
 * Update configs.
 */
function kamihaya_cms_paragraph_type_update_10002() {
  \Drupal::service('module_installer')->install(['entity_browser']);
  _kamihaya_cms_common_change_configs('kamihaya_cms_paragraph_type', [
    'field.storage.paragraph.field_color.yml',
    'field.storage.paragraph.field_mobile_image.yml',
    'field.field.paragraph.headings.field_color.yml',
    'field.field.paragraph.slider_item.field_mobile_image.yml',
    'field.field.paragraph.slider_item.field_slider_image.yml',
    'core.entity_form_display.paragraph.headings.default.yml',
    'core.entity_view_display.paragraph.headings.default.yml',
    'core.entity_form_display.paragraph.divider.default.yml',
    'core.entity_form_display.paragraph.image_link.default.yml',
    'core.entity_form_display.paragraph.link_button.default.yml',
    'field.field.paragraph.slider_item.field_image_link.yml',
    'core.entity_view_display.paragraph.slider_item.default.yml',
    'core.entity_form_display.paragraph.slider_item.default.yml',
  ], 'install');

  _kamihaya_cms_common_save_translation_configs([
    'field.field.paragraph.slider_item.field_image_link.yml',
    'field.field.paragraph.slider_item.field_mobile_image.yml',
  ], 'ja');

}

/**
 * Update configs.
 */
function kamihaya_cms_paragraph_type_update_10003() {
  $fields = [
    'field.field.paragraph.divider.field_divider_image',
    'field.field.paragraph.image_link.field_image',
    'field.field.paragraph.image.field_image',
    'field.field.paragraph.left_image_text.field_image',
    'field.field.paragraph.right_image_text.field_image',
    'field.field.paragraph.slider_item.field_mobile_image',
    'field.field.paragraph.slider_item.field_slider_image',
  ];

  foreach($fields as $field) {
    if ($field_config = \Drupal::configFactory()->getEditable($field)) {
      $value = explode(' ', $field_config->get('settings.file_extensions'));
      if (!in_array('svg', $value)) {
        $value[] = 'svg';
      }
      if (!in_array('webp', $value)) {
        $value[] = 'webp';
      }
      $field_config->set('settings.file_extensions', implode(' ', $value));
      $field_config->save(TRUE);
    }
  }
}

/**
 * Update configs.
 */
function kamihaya_cms_paragraph_type_update_10004() {
  $config_factory = \Drupal::configFactory();
  $configs = [];
  $field_config = FieldStorageConfig::loadByName('paragraph', 'field_image_description');
  if (!$field_config) {
    $configs = array_merge($configs, [
      'field.storage.paragraph.field_image_description.yml',
      'field.field.paragraph.image_link.field_image_description.yml',
    ]);
  }
  $field_config = FieldStorageConfig::loadByName('paragraph', 'field_image_desc_text_size');
  if (!$field_config) {
    $configs = array_merge($configs, [
      'field.storage.paragraph.field_image_desc_text_size.yml',
      'field.field.paragraph.image_link.field_image_desc_text_size.yml',
    ]);
  }
  _kamihaya_cms_common_change_configs('kamihaya_cms_paragraph_type', $configs, 'install');

  if ($field_config) {
    return;
  }

  $fields = [
    'field_image_description' => [
      'form' => 'string_textarea',
      'view' => 'basic_string',
    ],
    'field_image_desc_text_size' => [
      'form' => 'number',
      'view' => 'number_integer',
    ],
  ];

  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
  $display_repository = \Drupal::service('entity_display.repository');

  foreach($fields as $field => $type) {
    $display_repository->getFormDisplay('paragraph', 'image_link')
      ->setComponent($field, [
        'type' => $type['form'],
      ])
      ->save();

    $display_repository->getViewDisplay('paragraph', 'image_link')
      ->setComponent($field, [
        'label' => 'hidden',
        'type' => $type['view'],
      ])
      ->save();
  }

  _kamihaya_cms_common_save_translation_configs([
    'field.field.paragraph.image_link.field_image_description.yml',
    'field.field.paragraph.image_link.field_meta_tag.yml',
  ], 'ja');

}

/**
 * Update configs.
 */
function kamihaya_cms_paragraph_type_update_10005() {
  $config_factory = \Drupal::configFactory();
  $storage_configs = [];
  $field_configs = [];
  $fields = [
    'image' => [
      'field_width' => 'number',
      'field_width_unit' => 'options_select',
      'field_height' => 'number',
      'field_height_unit' => 'options_select',
    ],
    'image_link' => [
      'field_width' => 'number',
      'field_width_unit' => 'options_select',
      'field_mobile_height' => 'number',
    ],
  ];

  foreach($fields as $type => $para_fields) {
    foreach($para_fields as $field => $field_type) {
      $field_config = FieldStorageConfig::loadByName('paragraph', $field);
      if ($field_config) {
        continue;
      }
      if (!in_array("field.storage.paragraph.{$field}.yml", $storage_configs)) {
        $storage_configs[] = "field.storage.paragraph.{$field}.yml";
      }
      $field_configs[] = "field.field.paragraph.{$type}.{$field}.yml";
    }
  }
  $comfigs = array_merge($storage_configs, $field_configs);
  _kamihaya_cms_common_change_configs('kamihaya_cms_paragraph_type', $comfigs, 'install');

  if (empty($comfigs)) {
    return;
  }

  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $display_repository */
  $display_repository = \Drupal::service('entity_display.repository');

  foreach($fields as $type => $para_fields) {
    foreach($para_fields as $field => $field_type) {
      $display_repository->getFormDisplay('paragraph', $type)
        ->setComponent($field, [
          'type' => $field_type,
         ])
        ->save();

    $display = $field_type == 'number' ? 'number_integer' : 'list_default';
    $display_repository->getViewDisplay('paragraph', $type)
      ->setComponent($field, [
        'label' => 'hidden',
        'type' => $display,
      ])
      ->save();
    }
  }

  _kamihaya_cms_common_save_translation_configs([
    'field.field.paragraph.image.field_width.yml',
    'field.field.paragraph.image.field_width_unit.yml',
    'field.field.paragraph.image.field_height.yml',
    'field.field.paragraph.image.field_height_unit.yml',
    'field.field.paragraph.image_link.field_width.yml',
    'field.field.paragraph.image_link.field_width_unit.yml',
    'field.field.paragraph.image_link.field_mobile_height.yml',
  ], 'ja');

}
