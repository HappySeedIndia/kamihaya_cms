<?php

use Drupal\commerce_product\Entity\ProductType;
use Drupal\paragraphs\Entity\ParagraphsType;

/**
 * Implements hook_install().
 */
function kamihaya_cms_commerce_install() {
  _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'core.entity_form_display.commerce_product.default.default.yml',
    'core.entity_view_display.commerce_product.default.default.yml',
  ], 'optional');
}

/**
 * Update configs.
 */
function kamihaya_cms_commerce_update_10001() {
  _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'taxonomy.vocabulary.product_category.yml',
    'core.entity_form_display.taxonomy_term.product_category.default.yml',
    'language.content_settings.taxonomy_term.product_category.yml',
  ], 'install');

  _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'field.storage.commerce_product.field_body.yml',
    'field.storage.commerce_product.field_category.yml',
    'field.storage.commerce_product.field_description.yml',
    'field.storage.commerce_product.field_thumbnail_image.yml',
    'field.field.commerce_product.default.field_body.yml',
    'field.field.commerce_product.default.field_category.yml',
    'field.field.commerce_product.default.field_description.yml',
    'field.field.commerce_product.default.field_thumbnail_image.yml',
    'core.entity_form_display.commerce_product.default.default.yml',
    'core.entity_view_display.commerce_product.default.default.yml',
  ], 'optional');

}

/**
 * Update configs.
 */
function kamihaya_cms_commerce_update_10002() {
  \Drupal::service('module_installer')->install(['shs']);
  _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'field.storage.taxonomy_term.field_thumbnail_image.yml',
    'field.storage.taxonomy_term.field_path_name.yml',
    'field.storage.taxonomy_term.field_direct_link.yml',
    'field.field.taxonomy_term.product_category.field_thumbnail_image.yml',
    'field.field.taxonomy_term.product_category.field_path_name.yml',
    'field.field.taxonomy_term.product_category.field_direct_link.yml',
    'core.entity_view_display.taxonomy_term.product_category.default.yml',
    'core.entity_form_display.taxonomy_term.product_category.default.yml',
  ], 'install');

    _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'pathauto.pattern.product_page.yml',
    'core.entity_view_mode.commerce_product.product_list.yml',
    'core.entity_view_display.commerce_product.default.product_list.yml',
    'views.view.product_list.yml',
  ], 'optional');

  _kamihaya_cms_common_save_translation_configs([
    'field.field.commerce_product.default.field_body.yml',
    'field.field.commerce_product.default.field_category.yml',
    'field.field.commerce_product.default.field_description.yml',
    'field.field.commerce_product.default.field_thumbnail_image.yml',
    'field.field.taxonomy_term.product_category.field_thumbnail_image.yml',
    'field.field.taxonomy_term.product_category.field_path_name.yml',
    'field.field.taxonomy_term.product_category.field_direct_link.yml',
    'taxonomy.vocabulary.product_category.yml',
    'views.view.product_list.yml',
  ], 'ja');
}

/**
 * Update configs.
 */
function kamihaya_cms_commerce_update_10003() {
  _kamihaya_cms_common_change_configs('kamihaya_cms_commerce', [
    'field.storage.commerce_product.field_display_description.yml',
    'field.field.commerce_product.default.field_body.yml',
    'field.field.commerce_product.default.field_display_description.yml',
    'core.entity_form_display.commerce_product.default.default.yml',
    'core.entity_view_display.commerce_product.default.default.yml',
    'views.view.product_list.yml',
  ], 'optional');
}

/**
 * Update configs.
 */
function kamihaya_cms_commerce_update_10004() {
  if (empty(ParagraphsType::load('border_box'))) {
    return;
  }
  if (empty(ProductType::load('default'))) {
    return;
  }
  $paragraph_type = 'border_box';

  $field_config = \Drupal::configFactory()->getEditable("field.field.commerce_product.default.field_body");
  if (empty($field_config)) {
    return;
  }
  $dependencies = $field_config->get('dependencies.config');
  $target_bundles = $field_config->get('settings.handler_settings.target_bundles');
  $target_bundles_drag_drop = $field_config->get('settings.handler_settings.target_bundles_drag_drop');
  $max_weight = 0;
  foreach($target_bundles_drag_drop ?: [] as $target_bundle) {
    if (!$target_bundle['enabled'] || $target_bundle['weight'] < $max_weight) {
      continue;
    }
    $max_weight = $target_bundle['weight'];
  }

  $paragraph = "paragraphs.paragraphs_type.{$paragraph_type}";
  if (!in_array($paragraph, $dependencies)) {
    $dependencies[] = $paragraph;
  }
  if (!in_array($paragraph_type, $target_bundles)) {
    $target_bundles[$paragraph_type] = $paragraph_type;
  }
  if (!in_array($paragraph_type, $target_bundles_drag_drop)) {
    $target_bundles_drag_drop[$paragraph_type] = [
      'enabled' => TRUE,
      'weight' => ++$max_weight,
    ];
  }

  $field_config->set('dependencies.config', $dependencies);
  $field_config->set('settings.handler_settings.target_bundles', $target_bundles);
  $field_config->set('settings.handler_settings.target_bundles_drag_drop', $target_bundles_drag_drop);
  $field_config->save(TRUE);
}

/**
 * Implements hook_update_dependencies().
 */
function kkamihaya_cms_commerce_update_dependencies() {
  $dependencies['kamihaya_cms_commerce'] = [
    10004 => [
      'kamihaya_cms_paragraph_type' => 10008,
    ],
  ];
  return $dependencies;
}
