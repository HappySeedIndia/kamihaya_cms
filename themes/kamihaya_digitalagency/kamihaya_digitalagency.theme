<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;
use Drupal\kamihaya_digitalagency\KamihayaSettingsManager;
use Drupal\menu_link_content\MenuLinkContentInterface;
use Drupal\user\Entity\User;

/**
 * @file
 * Kamihaya デジタル庁デザインシステム準拠テーマ theme file.
 */

 /**
 * Implements hook_form_FORM_ID_alter().
 */
function kamihaya_digitalagency_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  $settings_manager = new KamihayaSettingsManager(\Drupal::service('theme.manager'));
  return $settings_manager->themeSettingsAlter($form, $form_state, $form_id);
}

/**
 * Implements hook_preprocess_pager().
 */
function kamihaya_digitalagency_preprocess_pager(&$variables) {
  $element = $variables['pager']['#element'];
  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');
  $pager = $pager_manager->getPager($element);
  $variables['pager_max'] = $pager->getTotalPages();
 }

/**
 * Implements hook_preprocess_views_mini_pager().
 */
function kamihaya_digitalagency_preprocess_views_mini_pager(&$variables) {
  /** @var \Drupal\Core\Pager\PagerManagerInterface $pager_manager */
  $pager_manager = \Drupal::service('pager.manager');

  $element = $variables['element'];
  $parameters = $variables['parameters'];
  $pager = $pager_manager->getPager($element);
  if (!$pager) {
    return;
  }

  $items = &$variables['items'];
  $current = $pager->getCurrentPage();
  $total = $pager->getTotalPages();

  $route_name = '<current>';
  $route_parameters = $variables['pager']['#route_parameters'] ?? [];

  $variables['pager_max'] = $total;

  // Create the "first" and "previous" links if we are not on the first page.
  if ($current > 0) {
    $items['first'] = [];
    $items['first']['attributes'] = new Attribute();
    $options = [
      'query' => $pager_manager->getUpdatedParameters($parameters, $element, 0),
    ];
    $items['first']['href'] = Url::fromRoute($route_name, $route_parameters, $options)->toString();
  }

  // Create the "next" and "last" links if we are not on the last page.
  if ($current < ($total - 1)) {
    $items['last'] = [];
    $items['last']['attributes'] = new Attribute();
    $options = [
      'query' => $pager_manager->getUpdatedParameters($parameters, $element, $total - 1),
    ];
    $items['last']['href'] = Url::fromRoute($route_name, $route_parameters, $options)->toString();
  }
 }

 /**
 * Implements hook_theme_suggestions_alter().
 */
function kamihaya_digitalagency_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook === 'views_view_grid') {
    $suggestions[] = $hook . '__' . $variables['view']->id() . '_' . $variables['view']->current_display;
  }
  if ($hook === 'views_view') {
    $suggestions[] = $hook . '__' . $variables['view']->id();
  }
  if ($hook === 'user') {
    $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
    $suggestions[] = 'user__' . $sanitized_view_mode;
  }
  if ($hook === 'node'
    && !empty($variables['elements']['#node'])
    && strpos($variables['elements']['#node']->getType(), 'kamihaya') === 0) {
    $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
    $suggestions[] = 'node__kamihaya';
    $suggestions[] = "node__{$variables['elements']['#node']->getType()}";
    $suggestions[] = "node__$sanitized_view_mode";
    $suggestions[] = "node__kamihaya__$sanitized_view_mode";
    $suggestions[] = "node__{$variables['elements']['#node']->getType()}__$sanitized_view_mode";
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function kamihaya_digitalagency_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Content type specific twig suggestion.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if (is_object($node)) {
      $content_type = $node->bundle();
      $suggestions[] = 'page__' . $content_type;
      $paths = explode('/', $node->toUrl()->toString());
      $suggest = '';
      foreach($paths as $path) {
        if (empty($path)) {
          continue;
        }
        $suggest .= "_$path";
       $suggestions[] = 'page__' . $content_type . '_' . $suggest;
      }
    }
  }
}

 /**
 * Implements hook_preprocess_node().
 */
function kamihaya_digitalagency_preprocess_node(array &$variables) {
  $variables['#attached']['library'][] = 'kamihaya_digitalagency/node';
  if ($variables['elements']['#node']->bundle() === 'recruitment' && $variables['view_mode'] === 'apply_form') {
    $user = User::load(Drupal::currentUser()->id());
    $view_builder = \Drupal::entityTypeManager()->getViewBuilder('user');

    $variables['profile'] = $view_builder->view($user, 'profile');
    $variables['resume'] =  $view_builder->view($user, 'resume');
  }

  if ($variables['elements']['#node']->bundle() === 'kamihaya_article') {
    $variables['#attached']['library'][] = 'kamihaya_digitalagency/node-kamihaya-article';
    $variables['show_post_date'] = theme_get_setting('teaser_show_post_date');
    $variables['show_author_info'] = theme_get_setting('teaser_show_author_info');
  }
}

 /**
 * Implements hook_preprocess_user().
 */
function kamihaya_digitalagency_preprocess_user(array &$variables) {
  $variables['#attached']['library'][] = 'kamihaya_digitalagency/user';
  $variables['view_mode'] = $variables['elements']['#view_mode'];
}

 /**
 * Implements hook_preprocess_view().
 */
function kamihaya_digitalagency_preprocess_views_view(array &$variables) {
  $variables['#attached']['library'][] = 'kamihaya_digitalagency/view';
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function kamihaya_digitalagency_preprocess_breadcrumb(&$variables){
  if(($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']){
    $variables['breadcrumb'][] = [
      'text' => $node->getTitle()
    ];
  }
}

 /**
 * Implements hook_preprocess_tb_megamenu_submenu().
 */
function kamihaya_digitalagency_preprocess_tb_megamenu_submenu(array &$variables) {
  if ($variables['level'] > 1) {
    return;
  }
  $parent = $variables['parent'];
  $variables['parent_title'] = $parent->link->getTitle();
  $variables['parent_link'] = [
    'title' => $parent->link->getTitle(),
    'url' => $parent->link->getUrlObject(),
  ];
}

 /**
 * Implements hook_preprocess_tb_megamenu_item().
 */
function kamihaya_digitalagency_preprocess_tb_megamenu_item(array &$variables) {
  if (empty($variables['item']->link->getOptions()['container_attributes'])) {
    return;
  }

  foreach($variables['item']->link->getOptions()['container_attributes'] as $key => $value) {
    if ($key === 'font_awesome_class') {
      $variables[$key] = $value;
      continue;
    }
    $variables['attributes']->setAttribute($key, $value);
  }
}

/**
 * Implements template_preprocess_menu().
 */
function kamihaya_digitalagency_preprocess_menu(array &$variables) {
   _kamihaya_digitalagency_preprocess_menu_items($variables['items']);
}

/**
 * Implements hook_preprocess_paragraph().
 */
// function kamihaya_digitalagency_preprocess_paragraph(array &$variables) {
//   $variables['#attached']['library'][] = 'kamihaya_digitalagency/paragraph';
// }

 /**
 * Implements hook_preprocess_commerce_product().
 */
function kamihaya_digitalagency_preprocess_commerce_product(array &$variables) {
  $variables['#attached']['library'][] = 'kamihaya_digitalagency/product';
}

/**
 * Helper function to recursively set the font awesome information.
 */
function _kamihaya_digitalagency_preprocess_menu_items(array &$items) {
  foreach ($items as &$item) {
    /** @var \Drupal\Core\Menu\MenuLinkInterface $menu_link */
    $menu_link = $item['original_link'] ?? NULL;
    if (!empty($menu_link)) {
      $options = ($menu_link instanceof MenuLinkContentInterface) ?
        $menu_link->link->first()->options : $menu_link->getOptions();
      if (!empty($item['attributes']) && $item['attributes']->hasAttribute('font_awesome_class')) {
        $item['font_awesome_class'] = $item['attributes']->offsetGet('font_awesome_class');
        $item['attributes']->removeAttribute('font_awesome_class');
      }
    }
    if (!empty($item['below'])) {
      _kamihaya_digitalagency_preprocess_menu_items($item['below']);
    }
  }
}
